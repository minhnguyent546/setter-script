#!/usr/bin/env bash

# this script is used for judging a solution
# and generating output locally
#

declare -r __script_name='setter'
declare -r __script_version='0.1.2'

function usage() {
  cat << EOF
Usage: ${__script_name} [options...] <command>

Options:
  -h, --help            Show this help message
  -V, --version         Show script version

Available commands:
  judge                 Judge your solution
  gen                   Generate output from input files
EOF
}

function version() {
  printf "%s v%s\n" "${__script_name}" "${__script_version}"
}

exec_file="$(readlink -f "$0")"
commands_path="$(dirname "$exec_file")"
export _SETTER_ROOT_DIR="$(dirname "$commands_path")"
export PATH="$PATH:${commands_path}"

subcommand="$1"
case "$subcommand" in 
  "" | -h | --help)
    usage; exit 0 ;;
  -V | --version)
    version; exit 0 ;;
  -*)
    printf "%s: invalid option '%s'\n" "${__script_name}" "$subcommand" >&2
    printf "See '%s --help' for more information.\n" "${__script_name}" >&2
    exit 2 ;;
  *)
    command_path="$(command -v "${__script_name}-${subcommand}")"
    if [[ ! -x "$command_path" ]]; then
      printf "%s: unknown command '%s'\n" "${__script_name}" "$subcommand" >&2
      printf "See '%s --help' for more information.\n" "${__script_name}" >&2
      exit 127
    fi
    shift
    exec "$command_path" "$@"
esac
